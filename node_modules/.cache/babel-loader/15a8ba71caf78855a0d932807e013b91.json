{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\game2048\\\\src\\\\Game2048.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Table from \"./Table\";\nimport { atom, useRecoilState, useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const tableState = atom({\n  key: 'tableState',\n  default: {\n    tableSize: {\n      row: 4,\n      col: 4\n    }\n  }\n});\nexport const gameTableState = atom({\n  key: 'gameTableState',\n  default: []\n});\nconst Keyboard = {\n  Left: 37,\n  Up: 38,\n  Right: 39,\n  Down: 40\n};\n\nconst moveTable = gameTable => {\n  const table = [...gameTable];\n  table.forEach((row, i) => {\n    table[i] = [...gameTable[i]];\n    const filteredRow = table[i].filter(v => v !== 0);\n    table[i].forEach((col, j) => {\n      table[i][j] = filteredRow[j] || 0;\n    });\n  });\n  console.log(table);\n};\n\nconst makeRandomBlock = gameTable => {\n  const table = [...gameTable];\n  const emptyTable = [];\n  table.forEach((row, i) => {\n    row.forEach((col, j) => {\n      if (table[i][j] === 0) {\n        emptyTable.push([i, j]);\n      }\n    });\n  });\n  const randomBlock = emptyTable[Math.floor(Math.random() * emptyTable.length)];\n  table[randomBlock[0]] = [...gameTable[randomBlock[0]]];\n  table[randomBlock[0]][randomBlock[1]] = 2;\n  return table;\n};\n\nconst startGame = (row, col) => {\n  const table = [];\n\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    table.push(rowData);\n\n    for (let j = 0; j < col; j++) {\n      rowData.push(0);\n    }\n  }\n\n  return makeRandomBlock(makeRandomBlock(table));\n};\n\nconst Game2048 = () => {\n  _s();\n\n  const [gameTable, setGameTable] = useRecoilState(gameTableState);\n  const {\n    tableSize\n  } = useRecoilValue(tableState);\n\n  const onClickStart = () => {\n    let table = startGame(tableSize.row, tableSize.col);\n    setGameTable(table);\n  };\n\n  const onClickTest = () => {\n    moveTable(gameTable);\n  };\n\n  const onKeypress = e => {\n    if (e.keyCode === Keyboard.Down) {\n      console.log(\"press down\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeypress);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickStart,\n      children: \"\\uC2DC\\uC791!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickTest,\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Game2048, \"We0aaO76wLWBml82Vp4p+IVmx7w=\", false, function () {\n  return [useRecoilState, useRecoilValue];\n});\n\n_c = Game2048;\nexport default Game2048;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game2048\");","map":{"version":3,"sources":["C:/study/game2048/src/Game2048.js"],"names":["React","useEffect","Table","atom","useRecoilState","useRecoilValue","tableState","key","default","tableSize","row","col","gameTableState","Keyboard","Left","Up","Right","Down","moveTable","gameTable","table","forEach","i","filteredRow","filter","v","j","console","log","makeRandomBlock","emptyTable","push","randomBlock","Math","floor","random","length","startGame","rowData","Game2048","setGameTable","onClickStart","onClickTest","onKeypress","e","keyCode","window","addEventListener"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Table from \"./Table\";\r\nimport {\r\n    atom, useRecoilState, useRecoilValue\r\n} from \"recoil\";\r\n\r\nexport const tableState = atom({\r\n    key: 'tableState',\r\n    default: {\r\n        tableSize: {\r\n            row: 4,\r\n            col: 4,\r\n        }\r\n    },\r\n});\r\n\r\nexport const gameTableState = atom({\r\n    key: 'gameTableState',\r\n    default: [],\r\n});\r\n\r\nconst Keyboard = {\r\n    Left: 37,\r\n    Up: 38,\r\n    Right: 39,\r\n    Down: 40,\r\n}\r\n\r\nconst moveTable = (gameTable) => {\r\n    const table = [...gameTable];\r\n\r\n    table.forEach((row, i) => {\r\n        table[i] = [...gameTable[i]];\r\n        const filteredRow = table[i].filter(v => v !== 0 );\r\n\r\n        table[i].forEach((col, j) => {\r\n            table[i][j] = filteredRow[j] || 0;\r\n        });\r\n    });\r\n\r\n    console.log(table);\r\n}\r\n\r\nconst makeRandomBlock = (gameTable) => {\r\n    const table = [...gameTable];\r\n    const emptyTable = [];\r\n\r\n    table.forEach((row, i) => {\r\n        row.forEach((col, j) => {\r\n            if (table[i][j] === 0) {\r\n                emptyTable.push([i, j]);\r\n            }\r\n        });\r\n    });\r\n\r\n    const randomBlock = emptyTable[Math.floor(Math.random() * emptyTable.length)];\r\n    table[randomBlock[0]] = [...gameTable[randomBlock[0]]];\r\n    table[randomBlock[0]][randomBlock[1]] = 2;\r\n\r\n    return table;\r\n}\r\n\r\nconst startGame = (row, col) => {\r\n    const table = [];\r\n\r\n    for (let i = 0; i < row; i++) {\r\n        const rowData = [];\r\n        table.push(rowData);\r\n        for (let j = 0; j < col; j++) {\r\n            rowData.push(0);\r\n        }\r\n    }\r\n\r\n    return makeRandomBlock(makeRandomBlock(table));\r\n}\r\n\r\nconst Game2048 = () => {\r\n    const [gameTable, setGameTable] = useRecoilState(gameTableState);\r\n    const { tableSize } = useRecoilValue(tableState);\r\n\r\n    const onClickStart = () => {\r\n        let table = startGame(tableSize.row, tableSize.col)\r\n        setGameTable(table);\r\n    };\r\n\r\n    const onClickTest = () => {\r\n        moveTable(gameTable);\r\n    }\r\n\r\n    const onKeypress = (e) => {\r\n        if (e.keyCode === Keyboard.Down) {\r\n            console.log(\"press down\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', onKeypress);\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Table />\r\n            <button onClick={onClickStart}>시작!!</button>\r\n            <button onClick={onClickTest}>Test</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Game2048;"]},"metadata":{},"sourceType":"module"}