{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\game2048\\\\src\\\\Game2048.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Table from \"./Table\";\nimport { atom, useRecoilState, useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const tableState = atom({\n  key: 'tableState',\n  default: {\n    tableSize: {\n      row: 4,\n      col: 4\n    }\n  }\n});\nexport const gameState = atom({\n  key: 'gameState',\n  default: {\n    gameTable: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]\n  }\n});\n\nconst startGame = (row, col) => {\n  const table = [];\n\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    table.push(rowData);\n\n    for (let j = 0; j < col; j++) {\n      rowData.push(0);\n    }\n  }\n\n  return table;\n};\n\nconst Game2048 = () => {\n  _s();\n\n  const [gameTable, setGameTable] = useRecoilState(gameState);\n  const {\n    tableSize\n  } = useRecoilValue(tableState);\n\n  const onClickStart = () => {\n    console.log(gameTable);\n    console.log(typeof gameTable);\n    const table = [...gameTable]; // for (let i = 0; i < tableSize.row; i ++) {\n    //     table[i] = [...gameTable[i]];\n    //     for (let j = 0; j < tableSize.col; j++) {\n    //         table[i][j] = 0;\n    //     }\n    // }\n    // console.log(table);\n    // setGameTable(table);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickStart,\n      children: \"\\uC2DC\\uC791!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Game2048, \"0OHVYbaeamZ4RYz/LZgJD68iqFg=\", false, function () {\n  return [useRecoilState, useRecoilValue];\n});\n\n_c = Game2048;\nexport default Game2048;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game2048\");","map":{"version":3,"sources":["C:/study/game2048/src/Game2048.js"],"names":["React","Table","atom","useRecoilState","useRecoilValue","tableState","key","default","tableSize","row","col","gameState","gameTable","startGame","table","i","rowData","push","j","Game2048","setGameTable","onClickStart","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,IADJ,EACUC,cADV,EAC0BC,cAD1B,QAEO,QAFP;;;AAIA,OAAO,MAAMC,UAAU,GAAGH,IAAI,CAAC;AAC3BI,EAAAA,GAAG,EAAE,YADsB;AAE3BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE;AACPC,MAAAA,GAAG,EAAE,CADE;AAEPC,MAAAA,GAAG,EAAE;AAFE;AADN;AAFkB,CAAD,CAAvB;AAUP,OAAO,MAAMC,SAAS,GAAGT,IAAI,CAAC;AAC1BI,EAAAA,GAAG,EAAE,WADqB;AAE1BC,EAAAA,OAAO,EAAE;AACLK,IAAAA,SAAS,EAAE,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJO;AADN;AAFiB,CAAD,CAAtB;;AAYP,MAAMC,SAAS,GAAG,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAMI,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC1B,UAAMC,OAAO,GAAG,EAAhB;AACAF,IAAAA,KAAK,CAACG,IAAN,CAAWD,OAAX;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAApB,EAAyBQ,CAAC,EAA1B,EAA8B;AAC1BF,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;AACJ;;AACD,SAAOH,KAAP;AACH,CAVD;;AAYA,MAAMK,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACP,SAAD,EAAYQ,YAAZ,IAA4BjB,cAAc,CAACQ,SAAD,CAAhD;AACA,QAAM;AAAEH,IAAAA;AAAF,MAAgBJ,cAAc,CAACC,UAAD,CAApC;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AAEvBC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOX,SAAnB;AAEA,UAAME,KAAK,GAAG,CAAC,GAAGF,SAAJ,CAAd,CALuB,CAQvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAhBD;;AAkBA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAES,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA5BD;;GAAMF,Q;UACgChB,c,EACZC,c;;;KAFpBe,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport Table from \"./Table\";\r\nimport {\r\n    atom, useRecoilState, useRecoilValue\r\n} from \"recoil\";\r\n\r\nexport const tableState = atom({\r\n    key: 'tableState',\r\n    default: {\r\n        tableSize: {\r\n            row: 4,\r\n            col: 4,\r\n        }\r\n    },\r\n});\r\n\r\nexport const gameState = atom({\r\n    key: 'gameState',\r\n    default: {\r\n        gameTable: [\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0],\r\n        ],\r\n    }\r\n});\r\n\r\nconst startGame = (row, col) => {\r\n    const table = [];\r\n    for (let i = 0; i < row; i++) {\r\n        const rowData = [];\r\n        table.push(rowData);\r\n        for (let j = 0; j < col; j++) {\r\n            rowData.push(0);\r\n        }\r\n    }\r\n    return table;\r\n}\r\n\r\nconst Game2048 = () => {\r\n    const [gameTable, setGameTable] = useRecoilState(gameState);\r\n    const { tableSize } = useRecoilValue(tableState);\r\n\r\n    const onClickStart = () => {\r\n\r\n        console.log(gameTable);\r\n        console.log(typeof(gameTable));\r\n\r\n        const table = [...gameTable];\r\n\r\n\r\n        // for (let i = 0; i < tableSize.row; i ++) {\r\n        //     table[i] = [...gameTable[i]];\r\n        //     for (let j = 0; j < tableSize.col; j++) {\r\n        //         table[i][j] = 0;\r\n        //     }\r\n        // }\r\n        // console.log(table);\r\n        // setGameTable(table);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Table/>\r\n            <button onClick={onClickStart}>시작!!</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Game2048;"]},"metadata":{},"sourceType":"module"}