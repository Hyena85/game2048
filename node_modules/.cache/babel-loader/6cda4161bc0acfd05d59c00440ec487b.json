{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\game2048\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Table from \"./Table\";\nimport { atom, useRecoilState, useRecoilValue } from \"recoil\";\nimport Game2048 from \"./Game2048/Game2048\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const tableState = atom({\n  key: 'tableState',\n  default: {\n    tableSize: {\n      row: 4,\n      col: 4\n    }\n  }\n});\nexport const gameTableState = atom({\n  key: 'gameTableState',\n  default: []\n});\nconst Keyboard = {\n  Left: 37,\n  Up: 38,\n  Right: 39,\n  Down: 40\n};\n\nconst App = () => {\n  _s();\n\n  const [gameTable, setGameTable] = useRecoilState(gameTableState);\n  const {\n    tableSize\n  } = useRecoilValue(tableState);\n  const game = new Game2048();\n\n  const onClickStart = () => {\n    let table = game.startGame(tableSize.row, tableSize.col);\n    setGameTable(table);\n  };\n\n  const onClickTest = () => {\n    // moveTable(gameTable);\n    game.rotateLeft(gameTable);\n  };\n\n  const onKeypress = e => {\n    if (e.keyCode === Keyboard.Down) {\n      console.log(\"press down\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeypress);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickStart,\n      children: \"\\uC2DC\\uC791!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickTest,\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"We0aaO76wLWBml82Vp4p+IVmx7w=\", false, function () {\n  return [useRecoilState, useRecoilValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/study/game2048/src/App.js"],"names":["React","useEffect","Table","atom","useRecoilState","useRecoilValue","Game2048","tableState","key","default","tableSize","row","col","gameTableState","Keyboard","Left","Up","Right","Down","App","gameTable","setGameTable","game","onClickStart","table","startGame","onClickTest","rotateLeft","onKeypress","e","keyCode","console","log","window","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,IADJ,EACUC,cADV,EAC0BC,cAD1B,QAEO,QAFP;AAIA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,OAAO,MAAMC,UAAU,GAAGJ,IAAI,CAAC;AAC3BK,EAAAA,GAAG,EAAE,YADsB;AAE3BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE;AACPC,MAAAA,GAAG,EAAE,CADE;AAEPC,MAAAA,GAAG,EAAE;AAFE;AADN;AAFkB,CAAD,CAAvB;AAUP,OAAO,MAAMC,cAAc,GAAGV,IAAI,CAAC;AAC/BK,EAAAA,GAAG,EAAE,gBAD0B;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAD,CAA3B;AAKP,MAAMK,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,EADO;AAEbC,EAAAA,EAAE,EAAE,EAFS;AAGbC,EAAAA,KAAK,EAAE,EAHM;AAIbC,EAAAA,IAAI,EAAE;AAJO,CAAjB;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,cAAc,CAACS,cAAD,CAAhD;AACA,QAAM;AAAEH,IAAAA;AAAF,MAAgBL,cAAc,CAACE,UAAD,CAApC;AACA,QAAMe,IAAI,GAAG,IAAIhB,QAAJ,EAAb;;AAEA,QAAMiB,YAAY,GAAG,MAAM;AACvB,QAAIC,KAAK,GAAGF,IAAI,CAACG,SAAL,CAAef,SAAS,CAACC,GAAzB,EAA8BD,SAAS,CAACE,GAAxC,CAAZ;AACAS,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACtB;AACAJ,IAAAA,IAAI,CAACK,UAAL,CAAgBP,SAAhB;AACH,GAHD;;AAKA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIA,CAAC,CAACC,OAAF,KAAchB,QAAQ,CAACI,IAA3B,EAAiC;AAC7Ba,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACJ,GAJD;;AAMA/B,EAAAA,SAAS,CAAC,MAAM;AACZgC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,UAAnC;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CAhCD;;GAAMP,G;UACgCf,c,EACZC,c;;;KAFpBc,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Table from \"./Table\";\r\nimport {\r\n    atom, useRecoilState, useRecoilValue\r\n} from \"recoil\";\r\n\r\nimport Game2048 from \"./Game2048/Game2048\";\r\n\r\nexport const tableState = atom({\r\n    key: 'tableState',\r\n    default: {\r\n        tableSize: {\r\n            row: 4,\r\n            col: 4,\r\n        }\r\n    },\r\n});\r\n\r\nexport const gameTableState = atom({\r\n    key: 'gameTableState',\r\n    default: [],\r\n});\r\n\r\nconst Keyboard = {\r\n    Left: 37,\r\n    Up: 38,\r\n    Right: 39,\r\n    Down: 40,\r\n}\r\n\r\nconst App = () => {\r\n    const [gameTable, setGameTable] = useRecoilState(gameTableState);\r\n    const { tableSize } = useRecoilValue(tableState);\r\n    const game = new Game2048();\r\n\r\n    const onClickStart = () => {\r\n        let table = game.startGame(tableSize.row, tableSize.col)\r\n        setGameTable(table);\r\n    };\r\n\r\n    const onClickTest = () => {\r\n        // moveTable(gameTable);\r\n        game.rotateLeft(gameTable);\r\n    }\r\n\r\n    const onKeypress = (e) => {\r\n        if (e.keyCode === Keyboard.Down) {\r\n            console.log(\"press down\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', onKeypress);\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Table />\r\n            <button onClick={onClickStart}>시작!!</button>\r\n            <button onClick={onClickTest}>Test</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}